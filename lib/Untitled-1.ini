Future<void> _login() async {
    final String login = _loginController.text;
    final String password = _passwordController.text;

    final response = await http.post(
      Uri.parse('http://10.0.2.2:5000/sklad/login'),
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, String>{
        'login': login,
        'password': password,
      }),
    );

    if (response.statusCode == 200) {
      final jsonResponse = jsonDecode(response.body);
      _token = jsonResponse['token'];

      if (_token != null) {
        Map<String, dynamic> payload = Jwt.parseJwt(_token!);
        String? role = payload['role'];

        if (role == 'WarehouseManager' || role == 'WarehouseAdmin') {
          Navigator.push(
            context,
            MaterialPageRoute(
                builder: (context) => BigHomeScreen(token: _token!)),
          );
        } else {
          _showErrorDialog(
              context, "Вы вошли в систему, но ваша роль не определена");
        }
      } else {
        _showErrorDialog(context, "Ошибка авторизации");
      }
    } else if (response.statusCode == 401) {
      _showErrorDialog(context, "Пользователь с таким логином не найден");
    } else if (response.statusCode == 402) {
      _showErrorDialog(context, "Неправильный пароль");
    } else {
      _showErrorDialog(context, "Ошибка сервера");
    }
  }